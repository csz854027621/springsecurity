<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd ">


<!--    &lt;!&ndash; 配置 spring 创建容器时要扫描的包 &ndash;&gt;
    <context:component-scan base-package="com.csz">
        &lt;!&ndash;制定扫包规则，不扫描@Controller 注解的 JAVA 类，其他的还是要扫描 &ndash;&gt;
        <context:exclude-filter type="annotation"
        expression="org.springframework.stereotype.Controller"/>

    </context:component-scan>-->



    <!--repository-->
    <context:property-placeholder location="classpath:jdbcConfig.properties"/>

    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
          <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <!--生产 Factory -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>

        <!-- 传入PageHelper的插件 -->
        <property name="plugins">
            <array>
                <!-- 传入插件的对象 -->
                <bean class="com.github.pagehelper.PageInterceptor">
                    <property name="properties">
                        <props>
                            <prop key="helperDialect">oracle</prop>
                            <prop key="reasonable">true</prop>
                        </props>
                    </property>
                </bean>
            </array>
        </property>


    </bean>

    <!--扫描接口包，动态代理生产dao，并加入spring容器内-->
    <bean  class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.csz.dao"/>
    </bean>


    <!--service-->
    <!--扫描service包-->
    <context:component-scan base-package="com.csz.service"/>
    <!--配置事务-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--注解扫描事务-->
   <!-- <tx:annotation-driven transaction-manager="transactionManager"/>-->

    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="*" propagation="REQUIRED"/> <!--开启事务-->
            <tx:method name="find*" propagation="SUPPORTS"/> <!--关闭事务-->
        </tx:attributes>
    </tx:advice>

    <aop:config>
        <aop:advisor advice-ref="txAdvice"
                     pointcut="execution(* com.csz.service.impl.*.*(..))"/> <!--需要aspect包解析表达式-->
    </aop:config>






    <!--
      AOP的注解支持。 AOP底层使用代理技术
      JDK动态代理，要求必须有接口
      cglib代理，生成子类对象，proxy-target-class="true" 默认使用cglib的方式
  -->
 <!--  <aop:aspectj-autoproxy proxy-target-class="true"/>-->



</beans>